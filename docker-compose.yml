version: '3.8'

services:
  # Base de datos Oracle
  oracle-db:
    image: container-registry.oracle.com/database/free:latest
    container_name: gestock-oracle-db
    environment:
      - ORACLE_PWD=adminadmin
      - ORACLE_CHARACTERSET=AL32UTF8
      - ORACLE_PDB=FREEPDB1
      - INIT_SGA_SIZE=1GB
      - INIT_PGA_SIZE=512MB
    ports:
      - "1539:1521"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./oracle-db/init-scripts:/opt/oracle/scripts/startup
    networks:
      - gestock-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/oracle/checkDBStatus.sh", "FREEPDB1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  # Backend NestJS
  backend:
    build:
      context: ./GeStock-Backend
      dockerfile: Dockerfile
    container_name: gestock-backend
    environment:
      - NODE_ENV=production
      - DB_HOST=oracle-db
      - DB_PORT=1521
      - DB_SERVICE_NAME=FREEPDB1
      - DB_USERNAME=GESTOCK
      - DB_PASSWORD=adminadmin
      - DB_SYNCHRONIZE=true
      - DB_LOGGING=false
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET:-zo2suI4TxGzE1LWQP0x8wbf2zWK6R0exI1dDZ+7eVd0=}
    ports:
      - "3000:3000"
    depends_on:
      - oracle-db
    volumes:
      - ./GeStock-Backend/uploads:/app/uploads
    networks:
      - gestock-network
    restart: unless-stopped

  # Frontend Angular
  frontend:
    build:
      context: ./GeStock-Frontend
      dockerfile: Dockerfile
    container_name: gestock-frontend
    ports:
      - "80:8080"
    depends_on:
      - backend
    networks:
      - gestock-network
    restart: unless-stopped
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=8080
      - BACKENDBASEURL='http://localhost:3000/api'


# Vol√∫menes persistentes
volumes:
  oracle-data:
    driver: local

# Red personalizada
networks:
  gestock-network:
    driver: bridge